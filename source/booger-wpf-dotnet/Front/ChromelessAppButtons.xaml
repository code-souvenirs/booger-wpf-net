<UserControl x:Class="Jsinh.BoogerWpf.ChromelessAppButtons"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Jsinh.BoogerWpf"
             mc:Ignorable="d"
             Panel.ZIndex="999">
    <UserControl.Style>
        <Style TargetType="{x:Type UserControl}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                             Value="Maximized">
                    <Setter Property="Margin"
                            Value="{Binding MarginOnMaximize}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    <!-- Note: Code inherited and adpated from https://wpfborderless.codeplex.com - Thanks to the author -->
    <UserControl.Resources>

        <!-- Chromeless window application buttons wrapper style / triggers -->
        <Style x:Key="ChromelessButtonWrapperStyle"
               TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation"
                    Value="Horizontal" />
        </Style>
        <!-- Chromeless window application buttons wrapper style / triggers -->

        <!-- Chromeless application button control base template style -->
        <ControlTemplate x:Key="ChromelessButtonControlTemplate"
                         TargetType="{x:Type ButtonBase}">
            <Border x:Name="ChromelessAppButtonBase"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Margin="{Binding AppButtonInterMargin, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Foreground"
                            Value="#FFADADAD" />
                    <Setter Property="Opacity"
                            TargetName="ChromelessAppButtonBase"
                            Value="0.5" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- Chromeless application button control base template style -->

        <!-- Chromeless application button control data template -->
        <DataTemplate x:Key="ChromelessButtonDataTemplate">
            <TextBlock TextWrapping="Wrap"
                       Text="{TemplateBinding Content}"
                       FontFamily="Webdings"
                       Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                       FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
        </DataTemplate>
        <!-- Chromeless application button control data template -->

        <!-- Chromeless application maximize button control data template and triggers -->
        <DataTemplate x:Key="MaximizeButtonDataTemplate">
            <TextBlock x:Name="StateText"
                       TextWrapping="Wrap"
                       Text="1"
                       FontFamily="Webdings"
                       Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                       FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                             Value="Normal">
                    <Setter TargetName="StateText"
                            Property="Text"
                            Value="1" />
                </DataTrigger>
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                             Value="Maximized">
                    <Setter TargetName="StateText"
                            Property="Text"
                            Value="2" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <!-- Chromeless application maximize button control data template and triggers -->

        <!-- Chromeless application minimize button style and triggers -->
        <Style x:Key="ChromelessMinimizeButtonStyle"
               TargetType="{x:Type Button}">
            <Style.Resources>
                <Storyboard x:Key="ChromelessButtonOnMouseDownStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="{x:Null}">
                        <EasingDoubleKeyFrame KeyTime="0"
                                              Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="ChromelessButtonOnMouseEnterStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="{x:Null}">
                        <EasingDoubleKeyFrame KeyTime="0"
                                              Value="0.8" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="ChromelessButtonOnMouseLeaveStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="{x:Null}">
                        <EasingDoubleKeyFrame KeyTime="0"
                                              Value="0.5" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </Style.Resources>
            <Setter Property="Background"
                    Value="{Binding ExceptExitBackgroundColor, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
            <Setter Property="BorderBrush"
                    Value="{x:Null}" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="VerticalAlignment"
                    Value="Top" />
            <Setter Property="Padding"
                    Value="{Binding AppButtonPadding, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
            <Setter Property="Opacity"
                    Value="0.5" />
            <Setter Property="Visibility"
                    Value="Collapsed" />
            <Setter Property="Template"
                    Value="{StaticResource ChromelessButtonControlTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Opacity"
                            Value="0.5" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="{Binding ExceptExitHoverBackgroundColor, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                </Trigger>
                <DataTrigger Binding="{Binding AppButtonOption, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                             Value="ShowAll">
                    <Setter Property="Visibility"
                            Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AppButtonOption, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                             Value="MinimizeAndExit">
                    <Setter Property="Visibility"
                            Value="Visible" />
                </DataTrigger>
                <EventTrigger RoutedEvent="Mouse.PreviewMouseDown">
                    <BeginStoryboard x:Name="BeginStoryboardOnMouseDown"
                                     Storyboard="{StaticResource ChromelessButtonOnMouseDownStoryboard}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard x:Name="BeginStoryboardOnMouseEnter"
                                     Storyboard="{StaticResource ChromelessButtonOnMouseEnterStoryboard}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard x:Name="BeginStoryboardOnMouseLeave"
                                     Storyboard="{StaticResource ChromelessButtonOnMouseLeaveStoryboard}" />
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <!-- Chromeless application minimize button style and triggers -->

        <!-- Chromeless application maximize / restore button style and triggers -->
        <Style x:Key="ChromelessMaximizeButtonStyle"
               TargetType="{x:Type Button}">
            <Style.Resources>
                <Storyboard x:Key="ChromelessButtonOnMouseDownStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="{x:Null}">
                        <EasingDoubleKeyFrame KeyTime="0"
                                              Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="ChromelessButtonOnMouseEnterStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="{x:Null}">
                        <EasingDoubleKeyFrame KeyTime="0"
                                              Value="0.8" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="ChromelessButtonOnMouseLeaveStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="{x:Null}">
                        <EasingDoubleKeyFrame KeyTime="0"
                                              Value="0.5" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </Style.Resources>
            <Setter Property="Background"
                    Value="{Binding ExceptExitBackgroundColor, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
            <Setter Property="BorderBrush"
                    Value="{x:Null}" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="VerticalAlignment"
                    Value="Top" />
            <Setter Property="Padding"
                    Value="{Binding AppButtonPadding, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
            <Setter Property="Opacity"
                    Value="0.5" />
            <Setter Property="Visibility"
                    Value="Collapsed" />
            <Setter Property="Template"
                    Value="{StaticResource ChromelessButtonControlTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Opacity"
                            Value="0.5" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="{Binding ExceptExitHoverBackgroundColor, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                </Trigger>
                <DataTrigger Binding="{Binding AppButtonOption, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                             Value="ShowAll">
                    <Setter Property="Visibility"
                            Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                             Value="Normal">
                    <Setter Property="Command"
                            Value="{Binding SystemCommands.MaximizeWindowCommand}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                             Value="Maximized">
                    <Setter Property="Command"
                            Value="{Binding SystemCommands.RestoreWindowCommand}" />
                </DataTrigger>
                <EventTrigger RoutedEvent="Mouse.PreviewMouseDown">
                    <BeginStoryboard x:Name="BeginStoryboardOnMouseDown"
                                     Storyboard="{StaticResource ChromelessButtonOnMouseDownStoryboard}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard x:Name="BeginStoryboardOnMouseEnter"
                                     Storyboard="{StaticResource ChromelessButtonOnMouseEnterStoryboard}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard x:Name="BeginStoryboardOnMouseLeave"
                                     Storyboard="{StaticResource ChromelessButtonOnMouseLeaveStoryboard}" />
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <!-- Chromeless application maximize / restore button style and triggers -->

        <!-- Chromeless application exit button style and triggers -->
        <Style x:Key="ChromelessExitButtonStyle"
               TargetType="{x:Type Button}">
            <Style.Resources>
                <Storyboard x:Key="ChromelessButtonOnMouseDownStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="{x:Null}">
                        <EasingDoubleKeyFrame KeyTime="0"
                                              Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="ChromelessButtonOnMouseEnterStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="{x:Null}">
                        <EasingDoubleKeyFrame KeyTime="0"
                                              Value="0.8" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="ChromelessButtonOnMouseLeaveStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="{x:Null}">
                        <EasingDoubleKeyFrame KeyTime="0"
                                              Value="0.5" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </Style.Resources>
            <Setter Property="Background"
                    Value="{Binding ExitBackgroundColor, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
            <Setter Property="BorderBrush"
                    Value="{x:Null}" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="VerticalAlignment"
                    Value="Top" />
            <Setter Property="Padding"
                    Value="{Binding AppExitButtonPadding, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
            <Setter Property="Opacity"
                    Value="0.5" />
            <Setter Property="Visibility"
                    Value="Visible" />
            <Setter Property="Template"
                    Value="{StaticResource ChromelessButtonControlTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Opacity"
                            Value="0.5" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="{Binding ExitHoverBackgroundColor, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                </Trigger>
                <EventTrigger RoutedEvent="Mouse.PreviewMouseDown">
                    <BeginStoryboard x:Name="BeginStoryboardOnMouseDown"
                                     Storyboard="{StaticResource ChromelessButtonOnMouseDownStoryboard}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard x:Name="BeginStoryboardOnMouseEnter"
                                     Storyboard="{StaticResource ChromelessButtonOnMouseEnterStoryboard}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard  x:Name="BeginStoryboardOnMouseLeave"
                                      Storyboard="{StaticResource ChromelessButtonOnMouseLeaveStoryboard}" />
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <!-- Chromeless application exit button style and triggers -->
    </UserControl.Resources>
    <StackPanel Style="{StaticResource ChromelessButtonWrapperStyle}">
        <!-- Chromeless window application minimize button -->
        <Button	Content="0"
                Style="{StaticResource ChromelessMinimizeButtonStyle}"
                ContentTemplate="{DynamicResource ChromelessButtonDataTemplate}" Click="MinimizeButtonClick" />

        <!-- Chromeless window application maximize / restore button -->
        <Button Style="{StaticResource ChromelessMaximizeButtonStyle}"
                ContentTemplate="{DynamicResource MaximizeButtonDataTemplate}" Click="RestoreButtonClick" />

        <!-- Chromeless window application exit / close button -->
        <Button	Content="r"
                Style="{StaticResource ChromelessExitButtonStyle}"
                ContentTemplate="{DynamicResource ChromelessButtonDataTemplate}" Click="CloseButtonClick" />
    </StackPanel>
</UserControl>